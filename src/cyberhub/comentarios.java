package cyberhub;

import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.ResultSet;
import javax.swing.JLabel;

public class comentarios extends javax.swing.JFrame {

    private String nombreUsuario;
    private String idJuego;
    String bbdd = "jdbc:hsqldb:hsql://localhost";
    java.sql.Connection con = null;

    public comentarios() {
        initComponents();
    }
    public comentarios(String nombre, String nombreUsuario, String idJuego) {
        initComponents();
        jLabel1.setText(nombre);
        jLabelNombre.setText(nombreUsuario);
        jLabelID.setText(idJuego);
        this.nombreUsuario = nombreUsuario;
        this.idJuego = idJuego;
        mostrarComentarios();
    }
    private String obtenerIdJuego(String nombreJuego) {
    String idJuego = null;
    try {
        Connection con = DriverManager.getConnection(bbdd, "SA", "SA");
        String sql = "SELECT id_del_juego FROM juegos WHERE nombre = ?";
        PreparedStatement statement = con.prepareStatement(sql);
        statement.setString(1, nombreJuego);
        ResultSet rs = statement.executeQuery();
        if (rs.next()) {
            idJuego = rs.getString("id_del_juego");
        }
        rs.close();
        statement.close();
        con.close();
    } catch (SQLException ex) {
        ex.printStackTrace();
    }
    return idJuego;
}

    private void mostrarComentarios() {
    // Obtener el id_del_juego desde jLabelID
    String idJuego = jLabelID.getText();
    
    try {
        Connection con = DriverManager.getConnection(bbdd, "SA", "SA");
        String sql = "SELECT nombre_usuario, nota, comentario FROM comentario WHERE id_del_juego = ?";
        PreparedStatement statement = con.prepareStatement(sql);
        statement.setString(1, idJuego);
        ResultSet rs = statement.executeQuery();
        
        // Limpiar el jPanel1 antes de agregar nuevos componentes
        jPanel1.removeAll();
        
        int y = 0; // Posición Y para colocar los componentes
        while (rs.next()) {
            // Obtener los datos del comentario
            String nombreUsuario = rs.getString("nombre_usuario");
            String nota = rs.getString("nota");
            String comentario = rs.getString("comentario");
            
            // Verificar si el comentario está vacío o es null
            if (comentario != null && !comentario.isEmpty()) {
                // Crear nuevos JLabel para mostrar la información
                JLabel lblNombreUsuario = new JLabel("Usuario: " + nombreUsuario);
                JLabel lblNota = new JLabel("Nota: " + nota);
                JLabel lblComentario = new JLabel("Comentario: " + comentario);
                
                // Establecer la posición y tamaño de los JLabel
                lblNombreUsuario.setBounds(10, y, 300, 20);
                lblNota.setBounds(10, y + 20, 300, 20);
                lblComentario.setBounds(10, y + 40, 300, 20);
                
                // Agregar los JLabel al jPanel1
                jPanel1.add(lblNombreUsuario);
                jPanel1.add(lblNota);
                jPanel1.add(lblComentario);
                
                // Incrementar la posición Y para el siguiente conjunto de JLabel
                y += 60; // Aumentar para dejar espacio entre registros
            }
        }
        
        // Actualizar el jPanel1
        jPanel1.revalidate();
        jPanel1.repaint();
        
        rs.close();
        statement.close();
        con.close();
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, "Error al obtener los comentarios: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        ex.printStackTrace();
    }
}



    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelNombre = new javax.swing.JLabel();
        jLabelID = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        jLabelNombre.setText("jLabel11");

        jLabelID.setText("jLabel11");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButton1.setText("Comentar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Volver");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 340, Short.MAX_VALUE)
        );

        jLabel2.setText("Nota");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 807, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextField1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(27, 27, 27)
                                        .addComponent(jLabel2))))
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(37, 37, 37))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    try {
    Connection con = DriverManager.getConnection(bbdd, "SA", "SA");
    String notaText = jTextField1.getText();
    
    // Verificar si el texto ingresado es un número
    try {
        double nota = Double.parseDouble(notaText);
        
        // Obtener el comentario desde el JTextArea
        String comentario = jTextArea1.getText();
        
        // Obtener el ID del juego desde el jLabelID
        String idJuego = jLabelID.getText();
        
        // Comprobar si ya existe un registro con el mismo id_del_juego y nombre_usuario
        String selectSql = "SELECT * FROM comentario WHERE id_del_juego = ? AND nombre_usuario = ?";
        PreparedStatement selectStatement = con.prepareStatement(selectSql);
        selectStatement.setString(1, idJuego);
        selectStatement.setString(2, nombreUsuario);
        ResultSet resultSet = selectStatement.executeQuery();
        
        if (resultSet.next()) {
            // Ya existe un registro, actualizar el comentario y la nota
            String updateSql = "UPDATE comentario SET comentario = ?, nota = ? WHERE id_del_juego = ? AND nombre_usuario = ?";
            PreparedStatement updateStatement = con.prepareStatement(updateSql);
            updateStatement.setString(1, comentario);
            updateStatement.setDouble(2, nota);
            updateStatement.setString(3, idJuego);
            updateStatement.setString(4, nombreUsuario);
            updateStatement.executeUpdate();
            updateStatement.close();
            System.out.println("Se ha actualizado el comentario existente.");
        } else {
            // No existe un registro, insertar uno nuevo con la nota
            String insertSql = "INSERT INTO comentario (id_del_juego, nombre_usuario, comentario, nota) VALUES (?, ?, ?, ?)";
            PreparedStatement insertStatement = con.prepareStatement(insertSql);
            insertStatement.setString(1, idJuego);
            insertStatement.setString(2, nombreUsuario);
            insertStatement.setString(3, comentario);
            insertStatement.setDouble(4, nota);
            insertStatement.executeUpdate();
            insertStatement.close();
            System.out.println("Se ha añadido un nuevo comentario con nota.");
        }
        
        resultSet.close();
        selectStatement.close();
    } catch (NumberFormatException ex) {
        // El texto no se puede convertir a un número
        System.out.println("No se pudo convertir el texto a un número.");
        // Muestra un mensaje al usuario
        JOptionPane.showMessageDialog(null, "El valor ingresado en el campo de nota no es un número válido.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    
    con.close();
} catch (SQLException ex) {
    ex.printStackTrace();
    System.out.println("Error al ejecutar la operación en la base de datos.");
}



    
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(comentarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(comentarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(comentarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(comentarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new comentarios().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelID;
    private javax.swing.JLabel jLabelNombre;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
